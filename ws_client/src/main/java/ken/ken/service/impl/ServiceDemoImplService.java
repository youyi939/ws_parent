package ken.service.impl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import ken.service.ServiceDemo;

/**
 * This class was generated by Apache CXF 3.4.0
 * 2020-10-16T11:55:40.732+08:00
 * Generated source version: 3.4.0
 *
 */
@WebServiceClient(name = "ServiceDemoImplService",
                  wsdlLocation = "http://127.0.0.1:18081/webService/services/demo?wsdl",
                  targetNamespace = "http://impl.service.ken/")
public class ServiceDemoImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.service.ken/", "ServiceDemoImplService");
    public final static QName ServiceDemoImplPort = new QName("http://impl.service.ken/", "ServiceDemoImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:18081/webService/services/demo?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ServiceDemoImplService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://127.0.0.1:18081/webService/services/demo?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ServiceDemoImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ServiceDemoImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceDemoImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ServiceDemoImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ServiceDemoImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ServiceDemoImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ServiceDemo
     */
    @WebEndpoint(name = "ServiceDemoImplPort")
    public ServiceDemo getServiceDemoImplPort() {
        return super.getPort(ServiceDemoImplPort, ServiceDemo.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceDemo
     */
    @WebEndpoint(name = "ServiceDemoImplPort")
    public ServiceDemo getServiceDemoImplPort(WebServiceFeature... features) {
        return super.getPort(ServiceDemoImplPort, ServiceDemo.class, features);
    }

}
